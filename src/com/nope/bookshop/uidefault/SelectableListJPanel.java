package com.nope.bookshop.uidefault;

import com.nope.bookshop.listener.SelectElementListener;
import com.nope.bookshop.res.Strings;
import com.nope.bookshop.uimodel.SelectableTableModel;
import java.awt.Window;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;

/**
 * A Generic Panel that allow a selection of multiple elements to be made<br>
 * It is required for the parent component to implement SelectElementListener<br>
 * so that once the selection has been made, it is returned to the parent
 * 
 * @author zvr
 */
public class SelectableListJPanel<T> extends javax.swing.JPanel {

    private Window parent; 
    private List<T> elements;
    private List<T> selectedElements;
    private SelectElementListener<T> listener;
    private boolean isMultipleSelectionAllowed;
    
    /**
     * Creates new form SelectableListJPanel
     * @param parent
     */
    public SelectableListJPanel(Window parent) {
        this(parent, null);
    }
    public SelectableListJPanel(List<T> elements){
        this(null, elements);
    }
    public SelectableListJPanel(Window parent, List<T> elements){
        this(parent, elements, null);
    }
    public SelectableListJPanel(Window parent, List<T> elements, List<T> selectedElements){
        super();
        this.parent = parent;
        this.elements = elements;
        this.selectedElements = selectedElements;
        isMultipleSelectionAllowed = true;
        initComponents();
        initTable();
    }
    
    
    
    private void initTable(){
        
        if(elements == null){
            return;
        }
        if(selectedElements == null){
            selectedElements = new ArrayList<>();
        }
        elementsTable.setModel(getDefaultTableModel());
    }
    
    private SelectableTableModel getDefaultTableModel(){
        Vector<String> columnNames = new Vector<>();
        Vector<Vector> data = new Vector<>();

        columnNames.add("Nom");
        columnNames.add("Selectionn√©");

        for (T element : elements) {

            Vector<Object> row = new Vector<>();
            row.add(element.toString());
            row.add(selectedElements.contains(element));
            row.add(element);
            data.add(row);
        }

        return new SelectableTableModel(data, columnNames);
    }
    
    public void addListener(SelectElementListener<T> listener){
        this.listener = listener;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titlePanel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        buttonsPanel = new javax.swing.JPanel();
        cancelButton = new javax.swing.JButton();
        confirmButton = new javax.swing.JButton();
        elementsPanel = new javax.swing.JPanel();
        elementsScrollPane = new javax.swing.JScrollPane();
        elementsTable = new javax.swing.JTable();

        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Selectionnez les elements");

        javax.swing.GroupLayout titlePanelLayout = new javax.swing.GroupLayout(titlePanel);
        titlePanel.setLayout(titlePanelLayout);
        titlePanelLayout.setHorizontalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        titlePanelLayout.setVerticalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titleLabel)
        );

        cancelButton.setText("Annuler");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        confirmButton.setText("Confirmer");
        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonsPanelLayout = new javax.swing.GroupLayout(buttonsPanel);
        buttonsPanel.setLayout(buttonsPanelLayout);
        buttonsPanelLayout.setHorizontalGroup(
            buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(confirmButton)
                .addContainerGap())
        );
        buttonsPanelLayout.setVerticalGroup(
            buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(confirmButton))
                .addContainerGap())
        );

        elementsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        elementsScrollPane.setViewportView(elementsTable);

        javax.swing.GroupLayout elementsPanelLayout = new javax.swing.GroupLayout(elementsPanel);
        elementsPanel.setLayout(elementsPanelLayout);
        elementsPanelLayout.setHorizontalGroup(
            elementsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(elementsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 746, Short.MAX_VALUE)
        );
        elementsPanelLayout.setVerticalGroup(
            elementsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(elementsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(titlePanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(elementsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(buttonsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(elementsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(buttonsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed
        confirmAction();
    }//GEN-LAST:event_confirmButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        cancelAction();
    }//GEN-LAST:event_cancelButtonActionPerformed


    protected void cancelAction(){
        int result = JOptionPane.showConfirmDialog(
                this,
                Strings.MSG_ASK_CONFIRMATION,
                Strings.MSG_CANCEL_SELECTION,
                JOptionPane.YES_NO_OPTION
        );
        if (parent == null) {
            return;
        }
        if (result == JOptionPane.YES_OPTION) {
            parent.dispose();
        }
    }
    protected void confirmAction(){
        List<T> selectedElements = new ArrayList<>();
        
        for(int row = 0; row < elementsTable.getRowCount(); row++){
            
            // If the element has been selected
            if((boolean) elementsTable.getModel().getValueAt(row, 1)){
                selectedElements.add((T) elementsTable.getModel().getValueAt(row, 2));
            }
        }
        
        // If more than 1 element is selected and its not allowed
        if(!isMultipleSelectionAllowed && selectedElements.size() > 1){
            JOptionPane.showMessageDialog(
                this,
                Strings.MSG_UNALLOWED_MULTI_SELECTION,
                Strings.MSG_ERROR,
                JOptionPane.ERROR_MESSAGE
            );
            return;
        }
        listener.elementsSelected(selectedElements);
        parent.dispose();
    }
    
    public boolean setMultipleSelectionAllowed(){
        return isMultipleSelectionAllowed;
    }
    public void setMultipleSelectionAllowed(boolean isAllowed){
        isMultipleSelectionAllowed = isAllowed;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonsPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton confirmButton;
    private javax.swing.JPanel elementsPanel;
    private javax.swing.JScrollPane elementsScrollPane;
    private javax.swing.JTable elementsTable;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JPanel titlePanel;
    // End of variables declaration//GEN-END:variables
}
