package com.nope.bookshop.ui;

import com.nope.bookshop.dao.CategoryDAO;
import com.nope.bookshop.entity.Category;
import com.nope.bookshop.exception.DatabaseException;
import com.nope.bookshop.listener.DatabaseUpdateListener;
import com.nope.bookshop.listener.SelectElementListener;
import com.nope.bookshop.res.Strings;
import com.nope.bookshop.uidefault.GenericJDialog;
import com.nope.bookshop.uidefault.SelectableListJPanel;
import java.awt.Window;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.plaf.ButtonUI;

/**
 *
 * @author zvr
 */
public class CategoryEditJPanel extends javax.swing.JPanel implements SelectElementListener<Category>{

    private Category category;
    private Window parent;
    private List<Category> subCategories;
    private List<DatabaseUpdateListener> listeners;
    
    public CategoryEditJPanel(Window parent, Category category) {
        this.category = category;
        this.parent = parent;
        this.subCategories = new ArrayList<>();
        this.listeners = new ArrayList<>();
        initComponents();
        initFields();
        initCategoryList();
    }
    
    public CategoryEditJPanel(Window parent) {
        this(parent, null);
    }

    private void initFields(){
        if(category == null){
            return;
        }
        
        nameTextField.setText(category.getName());
        subCategories = category.getCategories();
        
    }
    private void initCategoryList(){
        DefaultListModel<Category> model = new DefaultListModel<>();
        
        for(Category category : subCategories){
            model.addElement(category);
        }
        subCategoriesList.setModel(model);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titlePanel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        fieldsPanel = new javax.swing.JPanel();
        nameSubPanel = new javax.swing.JPanel();
        nameLabel = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        subCategoriesPanel = new javax.swing.JPanel();
        subCategoriesLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        subCategoriesList = new javax.swing.JList<>();
        editSubCategories = new javax.swing.JButton();
        buttonsPanel = new javax.swing.JPanel();
        cancelButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        confirmButton = new javax.swing.JButton();

        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Création");

        javax.swing.GroupLayout titlePanelLayout = new javax.swing.GroupLayout(titlePanel);
        titlePanel.setLayout(titlePanelLayout);
        titlePanelLayout.setHorizontalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        titlePanelLayout.setVerticalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, titlePanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(titleLabel))
        );

        nameLabel.setText("Nom");

        nameTextField.setMinimumSize(new java.awt.Dimension(20, 22));
        nameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout nameSubPanelLayout = new javax.swing.GroupLayout(nameSubPanel);
        nameSubPanel.setLayout(nameSubPanelLayout);
        nameSubPanelLayout.setHorizontalGroup(
            nameSubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(nameSubPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        nameSubPanelLayout.setVerticalGroup(
            nameSubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, nameSubPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(nameSubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        subCategoriesLabel.setText("Sous-catégories");

        subCategoriesList.setModel(new DefaultListModel<Category>()
        );
        jScrollPane1.setViewportView(subCategoriesList);

        editSubCategories.setText("Editer...");
        editSubCategories.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editSubCategoriesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout subCategoriesPanelLayout = new javax.swing.GroupLayout(subCategoriesPanel);
        subCategoriesPanel.setLayout(subCategoriesPanelLayout);
        subCategoriesPanelLayout.setHorizontalGroup(
            subCategoriesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subCategoriesPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(subCategoriesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(editSubCategories)
                    .addComponent(subCategoriesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        subCategoriesPanelLayout.setVerticalGroup(
            subCategoriesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subCategoriesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(subCategoriesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(subCategoriesPanelLayout.createSequentialGroup()
                        .addComponent(subCategoriesLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editSubCategories)))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout fieldsPanelLayout = new javax.swing.GroupLayout(fieldsPanel);
        fieldsPanel.setLayout(fieldsPanelLayout);
        fieldsPanelLayout.setHorizontalGroup(
            fieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(nameSubPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(subCategoriesPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        fieldsPanelLayout.setVerticalGroup(
            fieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fieldsPanelLayout.createSequentialGroup()
                .addComponent(nameSubPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(subCategoriesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cancelButton.setText("Annuler");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Supprimer");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        confirmButton.setText("Valider");
        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonsPanelLayout = new javax.swing.GroupLayout(buttonsPanel);
        buttonsPanel.setLayout(buttonsPanelLayout);
        buttonsPanelLayout.setHorizontalGroup(
            buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(deleteButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(confirmButton)
                .addContainerGap())
        );
        buttonsPanelLayout.setVerticalGroup(
            buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmButton)
                    .addComponent(cancelButton)
                    .addComponent(deleteButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titlePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(fieldsPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(buttonsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fieldsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void nameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTextFieldActionPerformed

    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed
        confirmAction();
    }//GEN-LAST:event_confirmButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        cancelAction();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void editSubCategoriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editSubCategoriesActionPerformed
        editAction();
    }//GEN-LAST:event_editSubCategoriesActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        deleteAction();
    }//GEN-LAST:event_deleteButtonActionPerformed

    protected void cancelAction() {
        int result = JOptionPane.showConfirmDialog(
                this,
                Strings.MSG_ASK_CONFIRMATION,
                Strings.MSG_CANCEL_EDITION,
                JOptionPane.YES_NO_OPTION
        );
        if (getParentWindow() == null) {
            return;
        }
        if (result == JOptionPane.YES_OPTION) {
            getParentWindow().dispose();

        }
    }
    protected void confirmAction() {
        int result = JOptionPane.showConfirmDialog(
                this,
                Strings.MSG_ASK_CONFIRMATION, 
                Strings.MSG_CONFIRM_EDITION, 
                JOptionPane.YES_NO_OPTION
        );
        if(getParentWindow() == null){
            return;
        }
        if(result == JOptionPane.YES_OPTION){
            getCategory().setName(getCategoryName());
            getCategory().setCategories(getSubCategories());
            
            try {
                new CategoryDAO().update(getCategory());
            } catch (DatabaseException ex) {
                JOptionPane.showMessageDialog(
                        this, 
                        ex.getMessage(), 
                        Strings.MSG_ERROR, 
                        JOptionPane.ERROR_MESSAGE
                );
                return;
            }
            
            JOptionPane.showMessageDialog(
                        this,
                        Strings.ELEMENT_CATEGORY+" "+Strings.MSG_SUCCESSFULLY_EDITED, 
                        Strings.MSG_INFO, 
                        JOptionPane.INFORMATION_MESSAGE
            );
            notifyDatabaseListener();
            getParentWindow().dispose();
        }
    }
    protected void deleteAction() {
        int result = JOptionPane.showConfirmDialog(
                this,
                Strings.MSG_ASK_CONFIRMATION,
                Strings.MSG_CONFIRM_DELETION,
                JOptionPane.YES_NO_OPTION
        );
        if (getParentWindow() == null) {
            return;
        }
        if (result == JOptionPane.YES_OPTION) {
            
            
            try {
                new CategoryDAO().delete(getCategory());
            } catch (DatabaseException ex) {
                JOptionPane.showMessageDialog(
                        this, 
                        ex.getMessage(), 
                        Strings.MSG_ERROR, 
                        JOptionPane.ERROR_MESSAGE
                );
                return;
            }
            JOptionPane.showMessageDialog(
                        this, 
                        Strings.ELEMENT_CATEGORY+" "+Strings.MSG_SUCCESSFULLY_DELETED, 
                        Strings.MSG_INFO, 
                        JOptionPane.INFORMATION_MESSAGE
            );
            notifyDatabaseListener();
            getParentWindow().dispose();

        }
    }
    protected void editAction(){
        
        GenericJDialog dialog = new GenericJDialog(SwingUtilities.getWindowAncestor(this));
        List<Category> categories = new CategoryDAO().getAll();
        SelectableListJPanel<Category> selectablePanel = new SelectableListJPanel<>(dialog, categories, getCategory().getCategories());
        
        selectablePanel.addListener(this);
        
        dialog.setContentPane(selectablePanel);
        dialog.pack();
        dialog.setLocationRelativeTo(getParentWindow());
        dialog.setVisible(true);
    }

    @Override
    public void elementsSelected(List<Category> selectedElements) {
        subCategories.clear();
        subCategories.addAll(selectedElements);
        initCategoryList();
    }
    public void addDatabaseListener(DatabaseUpdateListener listener){
        listeners.add(listener);
    }
    
    /**
     * Notify all listeners
     */
    protected void notifyDatabaseListener(){
        for(DatabaseUpdateListener listener : listeners){
            listener.databaseUpdated();
        }
    }
    
    public Window getParentWindow(){
        return parent;
    }
    public String getCategoryName(){
        return nameTextField.getText();
    }
    public Category getCategory(){
        return category;
    }
    public List<Category> getSubCategories(){
        return subCategories;
    }
    
    public void setTitle(String title){
        titleLabel.setText(title);
    }
    
    public void setCancelButton(ButtonUI buttonUI){
        cancelButton.setUI(buttonUI);
        cancelButton.updateUI();
        updateUI();
    }
    public void allowDeletion(boolean isAllowed){
        deleteButton.setEnabled(isAllowed);
        deleteButton.setVisible(isAllowed);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonsPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton confirmButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editSubCategories;
    private javax.swing.JPanel fieldsPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JPanel nameSubPanel;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JLabel subCategoriesLabel;
    private javax.swing.JList<Category> subCategoriesList;
    private javax.swing.JPanel subCategoriesPanel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JPanel titlePanel;
    // End of variables declaration//GEN-END:variables

}
