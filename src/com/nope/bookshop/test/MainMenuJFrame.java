package com.nope.bookshop.test;

import com.nope.bookshop.uidefault.JPanelFactory;
import com.nope.bookshop.res.Strings;
import com.nope.bookshop.ui.BookListJPanel;
import com.nope.bookshop.ui.BookStatusListJPanel;
import com.nope.bookshop.ui.CategoryListJPanel;
import com.nope.bookshop.ui.KeywordListJPanel;
import com.nope.bookshop.ui.PublisherListJPanel;
import com.nope.bookshop.ui.VatListJPanel;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JDialog;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 * @author zvr
 */
public class MainMenuJFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainMenuJFrame
     */
    public MainMenuJFrame() {
        initComponents();
        initMenu();
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainTabbedPane = new javax.swing.JTabbedPane();
        mainMenuBar = new javax.swing.JMenuBar();
        addMenu = new javax.swing.JMenu();
        showMenu = new javax.swing.JMenu();
        editMenu = new javax.swing.JMenu();
        deleteMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        addMenu.setText(Strings.MENU_ADD);
        mainMenuBar.add(addMenu);

        showMenu.setText(Strings.MENU_SHOW);
        mainMenuBar.add(showMenu);

        editMenu.setText(Strings.MENU_EDIT);
        mainMenuBar.add(editMenu);

        deleteMenu.setText(Strings.MENU_DELETE);
        mainMenuBar.add(deleteMenu);

        setJMenuBar(mainMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 825, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Initializes and adds each MenuItem into its Menu
     */
    private void initMenu(){
        
        ActionListener menuActionListener = createMenuActionListener();
        
        addBookMenuItem = new javax.swing.JMenuItem();
        addAuthorMenuItem = new javax.swing.JMenuItem();
        addEditorMenuItem = new javax.swing.JMenuItem();
        addKeyWordMenuItem = new javax.swing.JMenuItem();
        addCategoryMenuItem = new javax.swing.JMenuItem();
        
        addBookMenuItem.setText(Strings.ELEMENT_BOOK);
        addBookMenuItem.addActionListener(menuActionListener);
        //addMenu.add(addBookMenuItem);

        addAuthorMenuItem.setText(Strings.ELEMENT_AUTHOR);
        addAuthorMenuItem.addActionListener(menuActionListener);
        //addMenu.add(addAuthorMenuItem);

        addEditorMenuItem.setText(Strings.ELEMENT_PUBLISHER);
        addEditorMenuItem.addActionListener(menuActionListener);
        //addMenu.add(addEditorMenuItem);

        addKeyWordMenuItem.setText(Strings.ELEMENT_KEYWORD);
        addKeyWordMenuItem.addActionListener(menuActionListener);
        addMenu.add(addKeyWordMenuItem);

        addCategoryMenuItem.setText(Strings.ELEMENT_CATEGORY);
        addCategoryMenuItem.addActionListener(menuActionListener);
        addMenu.add(addCategoryMenuItem);
        
        
        editBookMenuItem = new javax.swing.JMenuItem();
        editAuthorMenuItem = new javax.swing.JMenuItem();
        editEditorMenuItem = new javax.swing.JMenuItem();
        editKeyWordMenuItem = new javax.swing.JMenuItem();
        editCategoryMenuItem = new javax.swing.JMenuItem();
        
        editBookMenuItem.setText(Strings.ELEMENT_BOOK);
        editBookMenuItem.addActionListener(menuActionListener);
        //editMenu.add(editBookMenuItem);

        editAuthorMenuItem.setText(Strings.ELEMENT_AUTHOR);
        editAuthorMenuItem.addActionListener(menuActionListener);
        //editMenu.add(editAuthorMenuItem);

        editEditorMenuItem.setText(Strings.ELEMENT_PUBLISHER);
        editEditorMenuItem.addActionListener(menuActionListener);
        //editMenu.add(editEditorMenuItem);

        editKeyWordMenuItem.setText(Strings.ELEMENT_KEYWORD);
        editKeyWordMenuItem.addActionListener(menuActionListener);
        //editMenu.add(editKeyWordMenuItem);
        
        editCategoryMenuItem.setText(Strings.ELEMENT_CATEGORY);
        editCategoryMenuItem.addActionListener(menuActionListener);
        //editMenu.add(editCategoryMenuItem);
        
        
        showBookMenuItem = new javax.swing.JMenuItem();
        showAuthorMenuItem = new javax.swing.JMenuItem();
        showEditorMenuItem = new javax.swing.JMenuItem();
        showKeyWordMenuItem = new javax.swing.JMenuItem();
        showCategoryMenuItem = new javax.swing.JMenuItem();
        showVatMenuItem = new javax.swing.JMenuItem();
        showBookStatusMenuItem = new javax.swing.JMenuItem();
        showPublisherMenuItem = new javax.swing.JMenuItem();

        showBookMenuItem.setText(Strings.ELEMENT_BOOK);
        showBookMenuItem.addActionListener(menuActionListener);
        showMenu.add(showBookMenuItem);

        showAuthorMenuItem.setText(Strings.ELEMENT_AUTHOR);
        showAuthorMenuItem.addActionListener(menuActionListener);
        //showMenu.add(showAuthorMenuItem);

        showEditorMenuItem.setText(Strings.ELEMENT_PUBLISHER);
        showEditorMenuItem.addActionListener(menuActionListener);
        //showMenu.add(showEditorMenuItem);

        showKeyWordMenuItem.setText(Strings.ELEMENT_KEYWORD);
        showKeyWordMenuItem.addActionListener(menuActionListener);
        showMenu.add(showKeyWordMenuItem);
        
        showCategoryMenuItem.setText(Strings.ELEMENT_CATEGORY);
        showCategoryMenuItem.addActionListener(menuActionListener);
        showMenu.add(showCategoryMenuItem);
        
        showVatMenuItem.setText(Strings.ELEMENT_VAT);
        showVatMenuItem.addActionListener(menuActionListener);
        showMenu.add(showVatMenuItem);
        
        showBookStatusMenuItem.setText(Strings.ELEMENT_BOOK_STATUS);
        showBookStatusMenuItem.addActionListener(menuActionListener);
        showMenu.add(showBookStatusMenuItem);
        
        showPublisherMenuItem.setText(Strings.ELEMENT_PUBLISHER);
        showPublisherMenuItem.addActionListener(menuActionListener);
        showMenu.add(showPublisherMenuItem);
        
        deleteBookMenuItem = new javax.swing.JMenuItem();
        deleteAuthorMenuItem = new javax.swing.JMenuItem();
        deleteEditorMenuItem = new javax.swing.JMenuItem();
        deleteKeyWordMenuItem = new javax.swing.JMenuItem();
        deleteCategoryMenuItem = new javax.swing.JMenuItem();
        
        deleteBookMenuItem.setText(Strings.ELEMENT_BOOK);
        deleteBookMenuItem.addActionListener(menuActionListener);
        //deleteMenu.add(deleteBookMenuItem);

        deleteAuthorMenuItem.setText(Strings.ELEMENT_AUTHOR);
        deleteAuthorMenuItem.addActionListener(menuActionListener);
        //deleteMenu.add(deleteAuthorMenuItem);

        deleteEditorMenuItem.setText(Strings.ELEMENT_PUBLISHER);
        deleteEditorMenuItem.addActionListener(menuActionListener);
        //deleteMenu.add(deleteEditorMenuItem);

        deleteKeyWordMenuItem.setText(Strings.ELEMENT_KEYWORD);
        deleteKeyWordMenuItem.addActionListener(menuActionListener);
        //deleteMenu.add(deleteKeyWordMenuItem);
        
    }
    
    private ActionListener createMenuActionListener(){
        
        return new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                
                if(e.getSource() instanceof JMenuItem) {
                    selectMenuItem((JMenuItem)e.getSource());
                }
                else{
                    JOptionPane.showMessageDialog(
                            getContentPane(), 
                            "mmmh", 
                            Strings.MSG_ERROR, 
                            JOptionPane.ERROR_MESSAGE
                    );
                }
            }
        };
    }
    
    /**
     * Defines what is going to happen when one of the MenuItem elements is selected
     * 
     * @param menuItem The selected MenuItem
     */
    private void selectMenuItem(JMenuItem menuItem){
        
        JPanelFactory panelFactory = new JPanelFactory();
        String tabTitle = "";
        
        if(menuItem.getParent() == addMenu){
            tabTitle += Strings.TAB_TITLE_ADD;
        }
        else if(menuItem.getParent() == editMenu){
            tabTitle += Strings.TAB_TITLE_EDIT;
        }
        else if(menuItem.getParent() == deleteMenu){
            tabTitle += Strings.TAB_TITLE_DELETE;
        }
        else if(menuItem.getParent() == showMenu){
            tabTitle += Strings.TAB_TITLE_SHOW;
        }
        tabTitle += " "+menuItem.getText();
        
        
        if (menuItem == addKeyWordMenuItem) {
            
            // Creation d'un JDialog qui va contenir le Panel
            JDialog dialog = new JDialog();
            // Creation du JPanel permettant la creation de mot-clef
            BookStatusListJPanel bookStatusAddJPanel = new BookStatusListJPanel();
            
            // Definition d'un titre pour le panel de creation de mot-clef
            bookStatusAddJPanel.setTitle("titre");
            
            // Ajout du Panel dans le JDialog
            dialog.setContentPane(bookStatusAddJPanel);
            
            // Configuration supplementaire et affichage du JDialog 
            dialog.pack();
            dialog.setLocationRelativeTo(SwingUtilities.getWindowAncestor(this));
            dialog.setVisible(true);
            
        } 
        else if (menuItem == showCategoryMenuItem) {
            createTab(tabTitle, new CategoryListJPanel());
        } 
        else if (menuItem == showKeyWordMenuItem) {
            createTab(tabTitle, new KeywordListJPanel());
        }
        else if (menuItem == showVatMenuItem) {
            createTab(tabTitle, new VatListJPanel());
        }
        else if (menuItem == showBookStatusMenuItem) {
            createTab(tabTitle, new BookStatusListJPanel());
        }
        else if (menuItem == showPublisherMenuItem) {
            createTab(tabTitle, new PublisherListJPanel());
        }
        else if (menuItem == showBookMenuItem) {
            createTab(tabTitle, new BookListJPanel());
        }
        
        else{
           JOptionPane.showMessageDialog(this, "Fonctionnalité non-implementée");
        }
    }
    
    /**
     * Creates a new tab and switch to it
     * 
     * @param title Tab's title
     * @param element Component to set inside this tab
     */
    private void createTab(String title, Component element){
        mainTabbedPane.addTab(title, element);
        mainTabbedPane.setSelectedIndex(mainTabbedPane.getTabCount()-1);
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenuJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenuJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenuJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenuJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainMenuJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu addMenu;
    private javax.swing.JMenu deleteMenu;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuBar mainMenuBar;
    private javax.swing.JTabbedPane mainTabbedPane;
    private javax.swing.JMenu showMenu;
    // End of variables declaration//GEN-END:variables
    
    private javax.swing.JMenuItem addBookMenuItem;
    private javax.swing.JMenuItem addAuthorMenuItem;
    private javax.swing.JMenuItem addEditorMenuItem;
    private javax.swing.JMenuItem addKeyWordMenuItem;
    private javax.swing.JMenuItem addCategoryMenuItem;
    
    private javax.swing.JMenuItem editBookMenuItem;
    private javax.swing.JMenuItem editAuthorMenuItem;
    private javax.swing.JMenuItem editEditorMenuItem;
    private javax.swing.JMenuItem editKeyWordMenuItem;
    private javax.swing.JMenuItem editCategoryMenuItem;
    
    private javax.swing.JMenuItem deleteBookMenuItem;
    private javax.swing.JMenuItem deleteAuthorMenuItem;
    private javax.swing.JMenuItem deleteEditorMenuItem;
    private javax.swing.JMenuItem deleteKeyWordMenuItem;
    private javax.swing.JMenuItem deleteCategoryMenuItem;
    
    private javax.swing.JMenuItem showBookMenuItem;
    private javax.swing.JMenuItem showAuthorMenuItem;
    private javax.swing.JMenuItem showEditorMenuItem;
    private javax.swing.JMenuItem showKeyWordMenuItem;
    private javax.swing.JMenuItem showCategoryMenuItem;
    private javax.swing.JMenuItem showVatMenuItem;
    private javax.swing.JMenuItem showBookStatusMenuItem;
    private javax.swing.JMenuItem showPublisherMenuItem;
    
}